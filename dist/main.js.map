{"version":3,"sources":["webpack://wheres-waldo/./src/client_side/all_levels/level_01.js","webpack://wheres-waldo/./src/client_side/all_levels/level_02.js","webpack://wheres-waldo/./src/client_side/all_levels/neededByAllLevels.js","webpack://wheres-waldo/./src/client_side/choose_level/renderLevels.js","webpack://wheres-waldo/./src/client_side/each_game_required_divs/requiredDivs.js","webpack://wheres-waldo/./src/client_side/gamePlay.js","webpack://wheres-waldo/./src/client_side/gamePlayLevelWise/characterSelectionDropDown.js","webpack://wheres-waldo/./src/client_side/gamePlayLevelWise/level_01_gamePlay_control.js","webpack://wheres-waldo/./src/client_side/gamePlayLevelWise/level_02_gamePlay_control.js","webpack://wheres-waldo/./src/client_side/gamePlayLevelWise/requiredByEachLevel.js","webpack://wheres-waldo/./src/server_side/accessingData.js","webpack://wheres-waldo/./src/server_side/level_01/characterPositions.js","webpack://wheres-waldo/./src/server_side/level_01/storingPositions.js","webpack://wheres-waldo/./src/server_side/level_02/characterPositions.js","webpack://wheres-waldo/./src/server_side/level_02/storingPositions.js","webpack://wheres-waldo/webpack/bootstrap","webpack://wheres-waldo/webpack/runtime/define property getters","webpack://wheres-waldo/webpack/runtime/hasOwnProperty shorthand","webpack://wheres-waldo/webpack/runtime/make namespace object","webpack://wheres-waldo/./src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA8F;AAClC;;AAErD;AACP,IAAI,yEAAqB;AACzB;AACA;AACA;AACA;;AAEA;AACA,IAAI,iFAAc;AAClB,IAAI,iFAAc;AAClB,IAAI,wFAAqB,CAAC,6EAAU;AACpC;;AAEA;AACA,IAAI,oFAAiB;AACrB,IAAI,oFAAiB;AACrB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;;AC/B8F;AACnC;;AAEpD;AACP,IAAI,yEAAqB;AACzB;AACA;AACA;AACA;;AAEA;AACA,IAAI,iFAAc;AAClB,IAAI,iFAAc;AAClB,IAAI,wFAAqB,CAAC,6EAAU;AACpC;;AAEA;AACA,IAAI,oFAAiB;AACrB,IAAI,oFAAiB;AACrB;;AAEA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;AClCmF;;AAEnF;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,oFAAiB;AACrB,IAAI,oFAAiB;AACrB;;AAEA;AACA,IAAI,oFAAiB;AACrB;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;ACzB6D;AACA;AACe;;AAErE;AACP,IAAI,4FAAyB;AAC7B,IAAI,4FAAyB;AAC7B;;AAEA;AACA;AACA;AACA,QAAQ,yEAAmB;AAC3B,KAAK;AACL,QAAQ,yEAAmB;AAC3B;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChBoE;AACwC;AACJ;AACA;;AAEjG;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,iFAAc;AACxC;AACA;;AAEA;;AAEA;AACA,QAAQ,qHAAuC;AAC/C,mBAAmB,2FAAY;AAC/B;AACA;AACA,QAAQ,4GAA4B;AACpC,KAAK;AACL,mBAAmB,2FAAY;AAC/B,QAAQ,qHAAuC;AAC/C;AACA;AACA,C;;;;;;;;;;;;;;;AC/BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;AC1BsF;AACU;;AAEhG;AACA,IAAI,+FAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,gGAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,gGAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,+EAAyB;AACjD,QAAQ,kFAA4B;AACpC,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;ACvCsF;AACU;;AAEhG;AACA,IAAI,+FAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,+EAAyB;AACjD,QAAQ,kFAA4B;AACpC,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA,C;;;;;;;;;;;;;;;;;;ACvBuE;AACC;AACmB;;AAE3F;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,6FAA0B;AAC9B;;AAEA;AACA,IAAI,qFAAqB;AACzB,IAAI,0FAAuB;AAC3B;;AAEA;AACA,IAAI,0FAAuB;AAC3B,IAAI,yFAAsB;AAC1B;;AAEA;AACA,IAAI,iFAAoB;AACxB,C;;;;;;;;;;;;;;;;ACnDA;;AAEO;AACP;AACA,sDAAsD,WAAW;AACjE;;AAEO;AACP;AACA;AACA;AACA,UAAU,uBAAuB;AACjC;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;;;;;AC1BA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACPgE;AACsE;;AAEtI;AACA,IAAI,4EAA4B,EAAE,+DAAc,EAAE,+DAAc;AAChE;;AAEA;AACA,IAAI,6EAA4B,EAAE,+DAAc,EAAE,+DAAc;AAChE;;AAEA;AACA,IAAI,6EAA4B,EAAE,+DAAc,EAAE,+DAAc;AAChE;;AAEO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;;;;ACnBA;AACA;AACuC;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,WAAW,+H;;;;;;;;;;;;;;;;ACbX,WAAW,+BAA+B;AACsB;AACM;;AAEtE;AACA,IAAI,4EAA4B,EAAE,+DAAc,EAAE,+DAAc;AAChE;;AAEO;AACP;AACA,C;;;;;;UCVA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;ACNgF;AAC9B;AAC4B;AACM;AACpF,WAAW,sBAAsB;AACjC,WAAW,iDAAiD;;;AAG5D,+DAAQ;AACR,2FAAmB;AACnB,iGAAyB;AACzB;AACA,6FAAqB,G","file":"main.js","sourcesContent":["import { gamePanel, level, levelImage, timer } from \"../each_game_required_divs/requiredDivs\";\nimport { necessaryCleanUpTasks } from \"./neededByAllLevels\";\n\nexport let level_one_game_view = () => {\n    necessaryCleanUpTasks();\n    renderingLevelAndTimer('01', '02-00-00');\n    renderCharactersOnDisplay();\n    renderingLevelWorldImage();\n}\n\nlet renderingLevelWorldImage = () => {\n    levelImage.src = '../../../dist/images/level-1.jpg';\n    levelImage.alt = 'level 01';\n    gamePanel.appendChild(levelImage);\n}\n\nlet renderingLevelAndTimer = (levelNum, levelTimer) => {\n    level.textContent = levelNum;\n    timer.textContent = levelTimer;\n}\n\nlet renderCharactersOnDisplay = () => {\n    document.querySelectorAll('.characters-display img').forEach(node => {\n        if(node.id == 'waldo') {\n            node.style.display = 'block';\n        } else if(node.id == 'odlaw') {\n            node.style.display = 'block';\n        } else if(node.id == 'wizard') {\n            node.style.display = 'block';\n        }\n    })\n}","import { gamePanel, level, levelImage, timer } from \"../each_game_required_divs/requiredDivs\";\nimport { necessaryCleanUpTasks } from \"./neededByAllLevels\"\n\nexport let level_two_game_view = () => {\n    necessaryCleanUpTasks();\n    renderingLevelAndTimer('02', '01-40-00');\n    renderCharactersOnDisplay();\n    renderingLevelWorldImage();\n}\n\nlet renderingLevelWorldImage = () => {\n    levelImage.src = '../../../dist/images/level-2.png';\n    levelImage.alt = 'level 02';\n    gamePanel.appendChild(levelImage);\n}\n\nlet renderingLevelAndTimer = (levelNum, levelTimer) => {\n    level.textContent = levelNum;\n    timer.textContent = levelTimer;\n}\n\nlet renderCharactersOnDisplay = () => {\n    document.querySelectorAll('.characters-display img').forEach(node => {\n        if(node.id == 'waldo') {\n            node.style.display = 'block';\n        } \n        // else if(node.id == 'odlaw') {\n        //     node.style.display = 'block';\n        // } else if(node.id == 'wizard') {\n        //     node.style.display = 'block';\n        // } else if(node.id == 'wilma') {\n        //     node.style.display = 'block';\n        // }\n    })\n}","import { level, levelImage, timer } from \"../each_game_required_divs/requiredDivs\";\n\n// let renderingLevelWorldImage = (src, alt) => {\n//     levelImage.src = src;\n//     levelImage.alt = alt;\n//     gamePanel.appendChild(levelImage);\n// }\n\nlet removingLevelAndTimer = () => {\n    level.textContent = '';\n    timer.textContent = '';\n}\n\nlet removingLevelWorldImage = () => {\n    levelImage.remove();\n}\n\nlet removeCharactersFromDisplay = () => {\n    document.querySelectorAll('.characters-display img').forEach(node=> node.style.display = 'none');\n}\n\nexport let necessaryCleanUpTasks = () => {\n    removingLevelWorldImage();\n    removingLevelAndTimer();\n    removeCharactersFromDisplay();\n}","import { level_one_game_view } from \"../all_levels/level_01\";\nimport { level_two_game_view } from \"../all_levels/level_02\";\nimport { level_01, level_02 } from \"../each_game_required_divs/requiredDivs\"\n\nexport let awaitsUserChooseLevel = () => {\n    level_01.addEventListener('click',userHasSelectedLevel);\n    level_02.addEventListener('click', userHasSelectedLevel);\n}\n\nlet userHasSelectedLevel = evt => {\n    let id = evt.target.id;\n    if(id == 'level-01') {\n        level_one_game_view();\n    } else if(id == 'level-02') {\n        level_two_game_view();\n    }\n}","let waldo = document.querySelector('#waldo');\nlet odlaw = document.querySelector('#odlaw');\nlet wizard = document.querySelector('#wizard');\nlet wilma = document.querySelector('#wilma');\nlet wenda = document.querySelector('#wenda');\n\nlet level = document.querySelector('#level');\nlet timer = document.querySelector('#timer');\nlet levelImage = document.querySelector('#level-image');\nlet gamePanel = document.querySelector('.game-panel');\n\nlet level_01 = document.querySelector('#level-01');\nlet level_02 = document.querySelector('#level-02');\n\nlet resultText = document.querySelector('.result-text');\nlet resultDiv = document.querySelector('.level-result');\nlet playAgain = document.querySelector('#play-again');\n\nexport {waldo, odlaw, wizard, wilma, wenda, level, timer, levelImage, gamePanel, level_01, level_02, resultDiv, resultText, playAgain}","import { levelImage } from \"./each_game_required_divs/requiredDivs\";\nimport { charactersDD, stickDropDownWhereItsClicked } from \"./gamePlayLevelWise/characterSelectionDropDown\";\nimport { checkPositionWithFirebaseForGameLevel01 } from \"./gamePlayLevelWise/level_01_gamePlay_control\";\nimport { checkPositionWithFirebaseForGameLevel02 } from \"./gamePlayLevelWise/level_02_gamePlay_control\";\n\nexport let gamePlay = () => {\n    let worldImage = document.querySelector('.game-panel');\n    worldImage.addEventListener('click', checkWhichLevelIsInPlay);\n}\n\nlet checkWhichLevelIsInPlay = evt => {\n    let x = evt.clientX;\n    let y = evt.clientY;\n\n    let imageAltTagText = levelImage.alt;\n    let levelID = imageAltTagText.split(' ')[1];\n    console.log(levelID);\n    \n    let dropDown;\n\n    if(levelID == '01') {\n        checkPositionWithFirebaseForGameLevel01([x,y])\n        dropDown = charactersDD();\n        console.log(evt.pageX, evt.pageY)\n        // stickDropDownWhereItsClicked(dropDown, [x,y])\n        stickDropDownWhereItsClicked(dropDown, [evt.pageX, evt.pageY])\n    } else if(levelID == '02') {\n        dropDown = charactersDD();\n        checkPositionWithFirebaseForGameLevel02([x,y]);\n    }\n    // console.log(dropDown, \"checks?!\", dropDown.options);\n}","export let  charactersDD = () => {\n    let dropDownMarkUp = document.createElement('select');\n    let charactersAreInDisplay = document.querySelector('.characters-display').children;\n    Array.from(charactersAreInDisplay).forEach(character => {\n        let option = document.createElement('option');\n        // console.log(character)\n        if(character.style.display != 'none') {\n            option.value = character.alt;\n        option.textContent = character.alt;\n        dropDownMarkUp.append(option);\n        }\n    });\n    return dropDownMarkUp;\n}\n\nexport let stickDropDownWhereItsClicked = (dropDown, coords) => {\n    dropDown.setAttribute('style', 'color: green');\n    dropDown.style.marginLeft = coords[0]+'px';\n    dropDown.style.top = coords[1]+'px';\n    dropDown.style.zIndex = '-2';\n    dropDown.setAttribute('style', 'position: fixed');\n    document.querySelector('.game-panel').append(dropDown);\n    // document.querySelector('#level-image').append(dropDown);\n    // if(document.querySelector('.level-image')) {\n    //     document.querySelector('.game-panel').append(dropDown);\n    // }\n}","import { readCharacterCoordsDataFromFirebase } from \"../../server_side/accessingData\";\nimport { calculateTotalTimeElapsed, decideEffeciencyFindingWaldo } from \"./requiredByEachLevel\";\n\nlet checkIfItsWizard = coords => {\n    readCharacterCoordsDataFromFirebase('level_01', 'wizard').then(data=>{\n        console.log(data, \"wizard data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'wizard');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfItsWaldo = (coords) => {\n    readCharacterCoordsDataFromFirebase('level_01', 'waldo').then(data=>{\n        console.log(data, \"waldos data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'waldo');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfItsOdlaw = (coords) => {\n    readCharacterCoordsDataFromFirebase('level_01', 'odlaw').then(data=>{\n        console.log(data, \"odlaws data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'odlaw');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfCoordsWithinPositionRange = (data, coords, who) => {\n    console.log(data['X'][0], data.X[1], who);\n    if((coords[0] >= data['X'][0] && coords[0] <= data['X'][1]) && (coords[1] >= data['Y'][0] && coords[1] <= data['Y'][1])) {\n        console.log('found!!'+who, data['X'][0], data['X'][1]);\n        let timeSpent = calculateTotalTimeElapsed();\n        decideEffeciencyFindingWaldo(timeSpent, 'level_01');\n    } else {\n        console.log('go fish!!'+who, coords);\n    }\n}\n\nexport let checkPositionWithFirebaseForGameLevel01 = (coords) => {\n    checkIfItsWaldo(coords);\n    checkIfItsWizard(coords);\n    checkIfItsOdlaw(coords);\n}","import { readCharacterCoordsDataFromFirebase } from \"../../server_side/accessingData\";\nimport { calculateTotalTimeElapsed, decideEffeciencyFindingWaldo } from \"./requiredByEachLevel\";\n\nlet checkIfItsWaldo = (coords) => {\n    readCharacterCoordsDataFromFirebase('level_02', 'waldo').then(data=>{\n        console.log(data, \"waldos data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'waldo');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfCoordsWithinPositionRange = (data, coords, who) => {\n    console.log(data['X'][0], data.X[1], who);\n    if((coords[0] >= data['X'][0] && coords[0] <= data['X'][1]) && (coords[1] >= data['Y'][0] && coords[1] <= data['Y'][1])) {\n        console.log('found!!'+who, data['X'][0], data['X'][1]);\n        let timeSpent = calculateTotalTimeElapsed();\n        decideEffeciencyFindingWaldo(timeSpent, \"level_02\");\n    } else {\n        console.log('go fish!!'+who, coords);\n    }\n}\n\nexport let checkPositionWithFirebaseForGameLevel02 = (coords) => {\n    checkIfItsWaldo(coords);\n}","import { storeEachLevelResult } from \"../../server_side/accessingData\";\nimport { necessaryCleanUpTasks } from \"../all_levels/neededByAllLevels\";\nimport { playAgain, resultDiv, resultText } from \"../each_game_required_divs/requiredDivs\";\n\nlet timeStarted = Date.now();\n\nexport let calculateTotalTimeElapsed = () => {\n    let timeElapsed = Date.now() - timeStarted;\n    let seconds = Math.floor(timeElapsed/1000);\n    let minutes = seconds / 60;\n    console.log(timeElapsed, Math.floor(timeElapsed/1000), minutes)\n    return minutes;\n}\n\nexport let decideEffeciencyFindingWaldo = (timeTook, level) => {\n    let stars;\n    if(timeTook < .50) {\n        stars = '5 star';\n    } else if(timeTook >= .50 && timeTook < 1) {\n        stars = '4 star';\n    } else if(timeTook >= 1 && timeTook < 1.25) {\n        stars = '3 star';\n    } else {\n        stars = '2 star';\n    }\n    whatHappensAfterGame(stars, timeTook, level);\n}\n\nlet whatHappensAfterGame = (stars, time, level) => {\n    let name = prompt('please enter your name for leaderboard');\n    announceCompleted(stars, name);\n    storeResultToFirebase(time,name,stars, level);\n    awaitsUsersPlayAgain();\n}\n\nlet awaitsUsersPlayAgain = () => {\n    playAgain.addEventListener('click', gettingReadyForGame);\n}\n\nlet gettingReadyForGame = evt => {\n    necessaryCleanUpTasks();\n    resultDiv.style.display = 'none';\n}\n\nlet announceCompleted = (stars, name) => {\n    resultDiv.style.display = 'block';\n    resultText.textContent = 'congratulations!! '+name+' you got '+stars+' :)';\n}\n\nlet storeResultToFirebase = (completionTime, name, stars, level) => {\n    storeEachLevelResult(completionTime, name, level, stars);\n}","let db = firebase.firestore();\n\nexport let storeCharacterIntoFirestrore = (characterPos, whichLevel, characterName) => {\n    let [x,y] = [...characterPos];\n    db.collection(whichLevel).doc(characterName).set({X: x, Y: y}).then(()=>console.log(characterName+' coords details saved!!')).catch(err=>console.log(\"something's wrong!!\"));\n}\n\nexport let storeEachLevelResult = (time, name, level, stars) => {\n    db\n    .collection('results').doc(level)\n    .collection('results').doc(name)\n    .set({stars:stars, time:time})\n    .then(()=> console.log('result stored!!'))\n    .catch(err => console.log(\"error while storing result!!\", err));\n}\n\nexport let readCharacterCoordsDataFromFirebase = (collectionName, docName) => {\n    let coordsRanges = {}\n    return db.collection(collectionName).doc(docName)\n    .get().then(doc => {\n        coordsRanges.X = doc.data().X;\n        coordsRanges.Y = doc.data().Y;\n        // console.log('data loaded', doc.data(), doc.data().X, coordsRanges);\n        console.log('data loaded');\n        return coordsRanges;\n    }).catch(err => console.log(\"data couldn't be loaded!!\", err));\n}","let waldosRangeOfX = [400, 420];\nlet waldosRangeOfY = [103, 132];\n\nlet wizardRangeOfX = [470, 496];\nlet wizardRangeOfY = [101, 132];\n\nlet odlawsRangeOfX = [203, 213];\nlet odlawsRangeOfY = [110, 117];\n\nexport {waldosRangeOfX, waldosRangeOfY, odlawsRangeOfX, odlawsRangeOfY, wizardRangeOfX, wizardRangeOfY}","import { storeCharacterIntoFirestrore } from \"../accessingData\";\nimport { odlawsRangeOfX, odlawsRangeOfY, waldosRangeOfX, waldosRangeOfY, wizardRangeOfX, wizardRangeOfY } from \"./characterPositions\";\n\nlet waldosPosition = () => {\n    storeCharacterIntoFirestrore([waldosRangeOfX, waldosRangeOfY], 'level_01', 'waldo');\n}\n\nlet odlawsPosition = () => {\n    storeCharacterIntoFirestrore([odlawsRangeOfX, odlawsRangeOfY], 'level_01', 'odlaw');\n}\n\nlet wizardsPosition = () => {\n    storeCharacterIntoFirestrore([wizardRangeOfX, wizardRangeOfY], 'level_01', 'wizard');\n}\n\nexport let coords_for_level_01 = () => {\n    waldosPosition();\n    odlawsPosition();\n    wizardsPosition();\n}","let waldosRangeOfX = [383, 387];\nlet waldosRangeOfY = [33, 42];\nexport {waldosRangeOfX, waldosRangeOfY}\n\n// let wizardRangeOfX = [470, 496];\n// let wizardRangeOfY = [101, 132];\n\n// let odlawsRangeOfX = [203, 213];\n// let odlawsRangeOfY = [110, 117];\n\n// let wilmasRangeOfX = [203, 213];\n// let wilmasRangeOfY = [110, 117];\n\n// export {waldosRangeOfX, waldosRangeOfY, wizardRangeOfX, wizardRangeOfY, odlawsRangeOfX, odlawsRangeOfY, wilmasRangeOfX, wilmasRangeOfY}","// import { storeCharacterIntoFirestrore } from \"../accessingData\";\nimport { storeCharacterIntoFirestrore } from \"../accessingData\";\nimport { waldosRangeOfX, waldosRangeOfY } from \"./characterPositions\";\n\nlet waldosPosition = (level) => {\n    storeCharacterIntoFirestrore([waldosRangeOfX, waldosRangeOfY], level, 'waldo');\n}\n\nexport let saving_coords_for_level02 = () => {\n    waldosPosition('level_02');\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { awaitsUserChooseLevel } from \"./client_side/choose_level/renderLevels\";\nimport { gamePlay } from \"./client_side/gamePlay\";\nimport { coords_for_level_01 } from \"./server_side/level_01/storingPositions\";\nimport { saving_coords_for_level02 } from \"./server_side/level_02/storingPositions\";\n// import { coords_for_level_01 } from \"./server_side/savingPositions\";\n// import { coords_for_level_02, saving_coords_for_level02 } from \"./server_side/storingDataByLevels\";\n\n\ngamePlay();\ncoords_for_level_01();\nsaving_coords_for_level02();\n// coords_for_level_02();\nawaitsUserChooseLevel();"],"sourceRoot":""}