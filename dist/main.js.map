{"version":3,"sources":["webpack://wheres-waldo/./src/client_side/all_levels/level_01.js","webpack://wheres-waldo/./src/client_side/all_levels/level_02.js","webpack://wheres-waldo/./src/client_side/all_levels/neededByAllLevels.js","webpack://wheres-waldo/./src/client_side/choose_level/renderLevels.js","webpack://wheres-waldo/./src/client_side/each_game_required_divs/requiredDivs.js","webpack://wheres-waldo/./src/client_side/gamePlay.js","webpack://wheres-waldo/./src/client_side/gamePlayLevelWise/level_01_gamePlay_control.js","webpack://wheres-waldo/./src/server_side/accessingData.js","webpack://wheres-waldo/./src/server_side/characterPositions.js","webpack://wheres-waldo/./src/server_side/savingPositions.js","webpack://wheres-waldo/webpack/bootstrap","webpack://wheres-waldo/webpack/runtime/define property getters","webpack://wheres-waldo/webpack/runtime/hasOwnProperty shorthand","webpack://wheres-waldo/webpack/runtime/make namespace object","webpack://wheres-waldo/./src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAkI;AACtE;AAC5D;;AAEA;AACA;AACA;AACA;;AAEO;AACP,IAAI,yEAAqB;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,iFAAc;AAClB,IAAI,iFAAc;AAClB,IAAI,wFAAqB,CAAC,6EAAU;AACpC;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,oFAAiB;AACrB,IAAI,oFAAiB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,WAAW;AACX,I;;;;;;;;;;;;;;;;AClE8F;AACnC;;AAEpD;AACP,IAAI,yEAAqB;AACzB;AACA;AACA;AACA;;AAEA;AACA,IAAI,iFAAc;AAClB,IAAI,iFAAc;AAClB,IAAI,wFAAqB,CAAC,6EAAU;AACpC;;AAEA;AACA,IAAI,oFAAiB;AACrB,IAAI,oFAAiB;AACrB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;;AAEmF;;AAEnF;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,oFAAiB;AACrB,IAAI,oFAAiB;AACrB;;AAEA;AACA,IAAI,oFAAiB;AACrB;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9ByE;AACZ;AACA;AACe;;AAErE;AACP,IAAI,4FAAyB;AAC7B,IAAI,4FAAyB;AAC7B;;AAEA;AACA;AACA;AACA,QAAQ,yEAAmB;AAC3B;AACA,KAAK;AACL,QAAQ,yEAAmB;AAC3B;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACZmF;AACf;AACoC;;AAEjG;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,iFAAc;AACxC;AACA;;AAEA;AACA,QAAQ,qHAAuC;AAC/C;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;;;;;AC3EsF;;AAEtF;AACA,IAAI,+FAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,gGAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,gGAAmC;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;ACpCA,WAAW,eAAe;AAC4G;;AAEtI;;AAEA;AACA;AACA,sDAAsD,WAAW;AACjE;;AAEO;AACP,kCAAkC,+DAAc,EAAE,+DAAc;AAChE;;AAEO;AACP,kCAAkC,+DAAc,EAAE,+DAAc;AAChE;;AAEO;AACP,kCAAkC,+DAAc,EAAE,+DAAc;AAChE;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,C;;;;;;;;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACPkF;;AAE3E;AACP,IAAI,8DAAc;AAClB,IAAI,8DAAc;AAClB,IAAI,+DAAe;AACnB,C;;;;;;UCNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;ACNwE;AACQ;AAC9B;AAC4B;AACV;;AAEpE,+DAAQ;AACR,iFAAmB;AACnB;AACA,8FAAqB,G","file":"main.js","sourcesContent":["import { gamePanel, level, levelImage, timer, waldo, odlaw, wenda, wilma, wizard } from \"../each_game_required_divs/requiredDivs\";\nimport { necessaryCleanUpTasks } from \"./neededByAllLevels\";\n// import img from '../../../dist/images'\n\n// let level = document.querySelector('#level');\n// let timer = document.querySelector('#timer');\n// let levelImage = document.querySelector('#level-image');\n// let gamePanel = document.querySelector('.game-panel');\n\nexport let level_one_game_view = () => {\n    necessaryCleanUpTasks();\n\n    // removingLevelAndTimer();\n    renderingLevelAndTimer('01', '02-00-00');\n\n    // removeCharactersFromDisplay();\n    renderCharactersOnDisplay();\n\n    // removingLevelWorldImage();\n    renderingLevelWorldImage();\n}\n\nlet renderingLevelWorldImage = () => {\n    levelImage.src = '../../../dist/images/level-1.jpg';\n    levelImage.alt = 'level 01';\n    gamePanel.appendChild(levelImage);\n}\n\n// let removingLevelWorldImage = () => {\n//     levelImage.remove();\n// }\n\nlet renderingLevelAndTimer = (levelNum, levelTimer) => {\n    level.textContent = levelNum;\n    timer.textContent = levelTimer;\n}\n\n// let removingLevelAndTimer = () => {\n//     level.textContent = '';\n//     timer.textContent = '';\n// }\n\nlet renderCharactersOnDisplay = () => {\n    // waldo.src = '../../../dist/images/Character.Waldo.jpg';\n    // waldo.alt = 'waldo';\n    document.querySelectorAll('.characters-display img').forEach(node => {\n        if(node.id == 'waldo') {\n            node.style.display = 'block';\n        } else if(node.id == 'odlaw') {\n            node.style.display = 'block';\n        } else if(node.id == 'wizard') {\n            node.style.display = 'block';\n        }\n    })\n}\n\n// let removeCharactersFromDisplay = () => {\n//     // console.log(\"here@@\", waldo, odlaw, wizard, wilma, wenda)\n//     document.querySelectorAll('.characters-display img').forEach(node=>{\n//         // console.log(node);\n//         // node.src= '';\n//         node.style.display = 'none';\n//     });\n//     // [waldo, odlaw, wizard, wilma, wenda].forEach(node => {\n//     //     console.log(node)\n//     // });\n// }","import { gamePanel, level, levelImage, timer } from \"../each_game_required_divs/requiredDivs\";\nimport { necessaryCleanUpTasks } from \"./neededByAllLevels\"\n\nexport let level_two_game_view = () => {\n    necessaryCleanUpTasks();\n    renderingLevelAndTimer('02', '01-40-00');\n    renderCharactersOnDisplay();\n    renderingLevelWorldImage();\n}\n\nlet renderingLevelWorldImage = () => {\n    levelImage.src = '../../../dist/images/level-2.png';\n    levelImage.alt = 'level 02';\n    gamePanel.appendChild(levelImage);\n}\n\nlet renderingLevelAndTimer = (levelNum, levelTimer) => {\n    level.textContent = levelNum;\n    timer.textContent = levelTimer;\n}\n\nlet renderCharactersOnDisplay = () => {\n    document.querySelectorAll('.characters-display img').forEach(node => {\n        if(node.id == 'waldo') {\n            node.style.display = 'block';\n        } else if(node.id == 'odlaw') {\n            node.style.display = 'block';\n        } else if(node.id == 'wizard') {\n            node.style.display = 'block';\n        } else if(node.id == 'wilma') {\n            node.style.display = 'block';\n        }\n    })\n}","// let level = document.querySelector('#level');\n// let timer = document.querySelector('#timer');\n// let levelImage = document.querySelector('#level-image');\n// let gamePanel = document.querySelector('.game-panel');\n\nimport { level, levelImage, timer } from \"../each_game_required_divs/requiredDivs\";\n\n// let renderingLevelWorldImage = (src, alt) => {\n//     levelImage.src = src;\n//     levelImage.alt = alt;\n//     gamePanel.appendChild(levelImage);\n// }\n\nlet removingLevelAndTimer = () => {\n    level.textContent = '';\n    timer.textContent = '';\n}\n\nlet removingLevelWorldImage = () => {\n    levelImage.remove();\n}\n\nlet removeCharactersFromDisplay = () => {\n    document.querySelectorAll('.characters-display img').forEach(node=> node.style.display = 'none');\n}\n\nexport let necessaryCleanUpTasks = () => {\n    removingLevelWorldImage();\n    removingLevelAndTimer();\n    removeCharactersFromDisplay();\n}\n","import { gameplay_of_level_01 } from \"../../server_side/savingPositions\";\nimport { level_one_game_view } from \"../all_levels/level_01\";\nimport { level_two_game_view } from \"../all_levels/level_02\";\nimport { level_01, level_02 } from \"../each_game_required_divs/requiredDivs\"\n\nexport let awaitsUserChooseLevel = () => {\n    level_01.addEventListener('click',userHasSelectedLevel);\n    level_02.addEventListener('click', userHasSelectedLevel);\n}\n\nlet userHasSelectedLevel = evt => {\n    let id = evt.target.id;\n    if(id == 'level-01') {\n        level_one_game_view();\n        // gameplay_of_level_01();\n    } else if(id == 'level-02') {\n        level_two_game_view();\n        // gameplay_of_level_01();\n    }\n}","let waldo = document.querySelector('#waldo');\nlet odlaw = document.querySelector('#odlaw');\nlet wizard = document.querySelector('#wizard');\nlet wilma = document.querySelector('#wilma');\nlet wenda = document.querySelector('#wenda');\n\nlet level = document.querySelector('#level');\nlet timer = document.querySelector('#timer');\nlet levelImage = document.querySelector('#level-image');\nlet gamePanel = document.querySelector('.game-panel');\n\nlet level_01 = document.querySelector('#level-01');\nlet level_02 = document.querySelector('#level-02');\n\nexport {waldo, odlaw, wizard, wilma, wenda, level, timer, levelImage, gamePanel, level_01, level_02}","import { readCharacterCoordsDataFromFirebase } from \"../server_side/accessingData\";\nimport { levelImage } from \"./each_game_required_divs/requiredDivs\";\nimport { checkPositionWithFirebaseForGameLevel01 } from \"./gamePlayLevelWise/level_01_gamePlay_control\";\n\nexport let gamePlay = () => {\n    let worldImage = document.querySelector('.game-panel');\n    // worldImage.addEventListener('click', getPostionOfClick);\n    worldImage.addEventListener('click', checkWhichLevelIsInPlay);\n}\n\nlet checkWhichLevelIsInPlay = evt => {\n    let x = evt.clientX;\n    let y = evt.clientY;\n\n    let imageAltTagText = levelImage.alt;\n    let levelID = imageAltTagText.split(' ')[1];\n    console.log(levelID);\n\n    if(levelID == '01') {\n        checkPositionWithFirebaseForGameLevel01([x,y])\n    }\n    \n}\n\n// export let coordsRanges = {};\n\n// let checkIfItsWizard = coords => {\n//     readCharacterCoordsDataFromFirebase('level_01', 'wizard').then(data=>{\n//         console.log(data, \"wizard data!!\", coords);\n//         checkIfCoordsWithinPositionRange(data, coords, 'wizard');\n//     }).catch(err=>console.log(\"no data!!\", err));\n// }\n\n// let checkIfItsWaldo = (coords) => {\n//     readCharacterCoordsDataFromFirebase('level_01', 'waldo').then(data=>{\n//         console.log(data, \"data!!\", coords);\n//         checkIfCoordsWithinPositionRange(data, coords, 'waldo');\n//     }).catch(err=>console.log(\"no data!!\", err));\n// }\n\n// let checkIfCoordsWithinPositionRange = (data, coords, who) => {\n//     console.log(data['X'][0], data.X[1], who);\n//     if((coords[0] >= data['X'][0] && coords[0] <= data['X'][1]) && (coords[1] >= data['Y'][0] && coords[1] <= data['Y'][1])) {\n//         console.log('found!!'+who, data['X'][0], data['X'][1]);\n//     } else {\n//         console.log('go fish!!'+who);\n//     }\n// }\n\n// let checkPositionWithFirebase = (coords) => {\n//     checkIfItsWaldo(coords);\n//     checkIfItsWizard(coords);\n//     // readCharacterCoordsDataFromFirebase('level_01', 'waldo').then(data=>{\n//     //     console.log(data, \"data!!\", coords);\n//     //     checkIfCoordsWithinPositionRange(data, coords);\n//     // }).catch(err=>console.log(\"no data!!\", err));\n\n//     // let data = readCharacterCoordsDataFromFirebase('level_01', 'waldo');\n//     // console.log(data);\n//     // await readCharacterCoordsDataFromFirebase('level_01', 'waldo').then(data=>console.log(data)).catch(()=>console.log('error!!'));\n//     // console.log(readCharacterCoordsDataFromFirebase('level_01', 'waldo'));\n// }\n\n\n// let coordsX = [], coordsY = [];\n// let getPostionOfClick = (evt) => {\n//     let x = evt.clientX;\n//     let y = evt.clientY;\n\n//     // coordsX.push(x);\n//     // coordsY.push(y);\n//     // console.log(x, y);\n//     // console.log(levelImage.alt);\n//     checkWhichLevelIsInPlay(evt);\n//     checkPositionWithFirebase([x,y]);\n// }","import { readCharacterCoordsDataFromFirebase } from \"../../server_side/accessingData\";\n\nlet checkIfItsWizard = coords => {\n    readCharacterCoordsDataFromFirebase('level_01', 'wizard').then(data=>{\n        console.log(data, \"wizard data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'wizard');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfItsWaldo = (coords) => {\n    readCharacterCoordsDataFromFirebase('level_01', 'waldo').then(data=>{\n        console.log(data, \"waldos data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'waldo');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfItsOdlaw = (coords) => {\n    readCharacterCoordsDataFromFirebase('level_01', 'odlaw').then(data=>{\n        console.log(data, \"odlaws data!!\", coords);\n        checkIfCoordsWithinPositionRange(data, coords, 'odlaw');\n    }).catch(err=>console.log(\"no data!!\", err));\n}\n\nlet checkIfCoordsWithinPositionRange = (data, coords, who) => {\n    console.log(data['X'][0], data.X[1], who);\n    if((coords[0] >= data['X'][0] && coords[0] <= data['X'][1]) && (coords[1] >= data['Y'][0] && coords[1] <= data['Y'][1])) {\n        console.log('found!!'+who, data['X'][0], data['X'][1]);\n    } else {\n        console.log('go fish!!'+who, coords);\n    }\n}\n\nexport let checkPositionWithFirebaseForGameLevel01 = (coords) => {\n    checkIfItsWaldo(coords);\n    checkIfItsWizard(coords);\n    checkIfItsOdlaw(coords);\n}","// import { coordsRanges } from \"../client_side/gamePlay\";\nimport { odlawsRangeOfX, odlawsRangeOfY, waldosRangeOfX, waldosRangeOfY, wizardRangeOfX, wizardRangeOfY } from \"./characterPositions\";\n\nlet db = firebase.firestore();\n\nlet storeCharacterIntoFirestrore = (characterPos, whichLevel, characterName) => {\n    let [x,y] = [...characterPos];\n    db.collection(whichLevel).doc(characterName).set({X: x, Y: y}).then(()=>console.log(characterName+' coords details saved!!')).catch(err=>console.log(\"something's wrong!!\"));\n}\n\nexport let waldosPosition = () => {\n    storeCharacterIntoFirestrore([waldosRangeOfX, waldosRangeOfY], 'level_01', 'waldo');\n}\n\nexport let odlawsPosition = () => {\n    storeCharacterIntoFirestrore([odlawsRangeOfX, odlawsRangeOfY], 'level_01', 'odlaw');\n}\n\nexport let wizardsPosition = () => {\n    storeCharacterIntoFirestrore([wizardRangeOfX, wizardRangeOfY], 'level_01', 'wizard');\n}\n\nexport let readCharacterCoordsDataFromFirebase = (collectionName, docName) => {\n    // let coordsRangeOfX = [], coordsRangeOfY = [];\n    // let coordsRanges = [];\n    let coordsRanges = {}\n    return db.collection(collectionName).doc(docName)\n    .get().then(doc => {\n        // coordsRanges = [doc.data()];\n        coordsRanges.X = doc.data().X;\n        coordsRanges.Y = doc.data().Y;\n        // console.log('data loaded', doc.data(), doc.data().X, coordsRanges);\n        console.log('data loaded');\n        return coordsRanges;\n    }).catch(err => console.log(\"data couldn't be loaded!!\", err));\n    // return coordsRanges;\n}","let waldosRangeOfX = [400, 420];\nlet waldosRangeOfY = [106, 132];\n\nlet wizardRangeOfX = [470, 496];\nlet wizardRangeOfY = [121, 153];\n\nlet odlawsRangeOfX = [203, 213];\nlet odlawsRangeOfY = [153, 164];\n\nexport {waldosRangeOfX, waldosRangeOfY, odlawsRangeOfX, odlawsRangeOfY, wizardRangeOfX, wizardRangeOfY}","import { odlawsPosition, waldosPosition, wizardsPosition } from \"./accessingData\";\n\nexport let coords_for_level_01 = () => {\n    waldosPosition();\n    odlawsPosition();\n    wizardsPosition();\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { level_one_game_view } from \"./client_side/all_levels/level_01\";\nimport { awaitsUserChooseLevel } from \"./client_side/choose_level/renderLevels\";\nimport { gamePlay } from \"./client_side/gamePlay\";\nimport { waldosPosition, wizardsPosition } from \"./server_side/accessingData\";\nimport { coords_for_level_01 } from \"./server_side/savingPositions\";\n\ngamePlay();\ncoords_for_level_01()\n// level_one_game_view();\nawaitsUserChooseLevel();"],"sourceRoot":""}